strlen:
    mov x1, 0
strlen_loop:
    ldr BYTE x3, [x0]
    cmp x3, 0
    jeq strlen_end

    add x1, x1, 1
    add x0, x0, 1
    jmp strlen_loop
strlen_end:
    mov x0, x1
    ret

memcpy:
    cmp x2, 0
    jeq memcpy_end

    ldr BYTE x3, [x0]
    str BYTE x3, [x1]
    add x0, x0, 1
    add x1, x1, 1
    sub x2, x2, 1

    jmp memcpy
memcpy_end:
    ret

memset:
    cmp x2, 0
    jeq memset_end

    str BYTE x1, [x0]
    add x0, x0, 1
    sub x2, x2, 1
    jmp memset

memset_end:
    ret

memchr:
    mov x2, 0
memchr_loop:
    ldr BYTE x3, [x0, x2]
    cmp x3, x1
    jeq memchr_end

    add x2, x2, 1
    jmp memchr_loop

memchr_end:
    add x0, x0, x2
    ret
